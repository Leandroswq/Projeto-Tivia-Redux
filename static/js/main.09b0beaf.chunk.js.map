{"version":3,"sources":["Redux/reducer/player.js","Redux/reducer/token.js","Redux/reducer/ranking.js","Redux/reducer/questions.js","Redux/reducer/answers.js","Redux/reducer/timer.js","Redux/reducer/index.js","Redux/store/index.js","Redux/actions/index.js","pages/Login.js","components/GameHeader.js","components/ButtonAnswers.js","components/Timer.js","components/Questions.js","pages/Game.js","pages/Settings.js","pages/Ranking.js","pages/Feedback.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","name","score","assertions","gravatarEmail","gravatarImage","player","state","action","type","value","email","token","localStorage","picture","ranking","questions","correct","answers","disabledBtn","newAnswer","answer","magicNumber","sort","Math","random","timerRunning","time","timerId","undefined","timer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","actionPlayer","actionTimerRuning","actionSetTimerId","actionDisabledAnswers","actionGravatarImage","emailHash","md5","toString","getToken","dispatch","a","fetch","request","json","requestJsonToken","Login","props","useState","setName","setEmail","isDisable","setIsDisable","useDispatch","push","history","useEffect","length","className","htmlFor","data-testid","id","onChange","target","placeholder","disabled","onClick","GameHeader","useSelector","src","alt","ButtonAnswers","setHasClick","difficulty","classArray","setClassArray","indexArray","counter","forEach","item","createIndex","setColor","e","hard","medium","easy","setScore","buttonColor","map","element","clearInterval","ind","key","Timer","setClassName","interval","setInterval","test","Questions","questionsReducer","questionsClassName","setQuestionsClassName","setQuestions","question","setQuestion","position","setPosition","hasClick","getState","requestJsonQuestion","response_code","results","nextQuestion","aux","JSON","parse","stringify","saveLocalStorage","category","incorrect_answers","correct_answer","to","Game","Settings","Ranking","b","index","Feedback","Number","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09b0beaf.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  name: '',\n  score: 0,\n  assertions: 0,\n  gravatarEmail: '',\n  gravatarImage: '',\n};\n\nconst player = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'USER_REQUEST':\n    return {\n      ...state,\n      name: action.value.name,\n      gravatarEmail: action.value.email,\n    };\n  case 'GRAVATAR_IMAGE':\n    return { ...state, gravatarImage: action.value };\n  case 'ADD_SCORE': {\n    return { ...state,\n      score: state.score + action.value,\n      assertions: state.assertions + 1 };\n  }\n  case 'CLEAR_SCORE':\n    return { ...state, score: 0 };\n  default:\n    return state;\n  }\n};\n\nexport default player;\n","const INITIAL_STATE = '';\n\nconst token = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'TOKEN_REQUEST':\n    return action.value;\n  default:\n    return state;\n  }\n};\n\nexport default token;\n","const INITIAL_STATE = {\n  localStorage: [\n    { name: '',\n      score: '',\n      picture: '',\n    },\n  ],\n};\n\nconst ranking = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'RANKING_REQUEST':\n    return { ...state, localStorage: action.value };\n  default:\n    return state;\n  }\n};\n\nexport default ranking;\n","const INITIAL_STATE = {\n  questions: '',\n};\n\nconst questions = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'QUESTION_ACTION':\n\n    return { ...state, questions: action.value };\n  case 'CLEAR_QUESTION':\n    return { ...state, questions: '' };\n  default:\n    return state;\n  }\n};\n\nexport default questions;\n","const INITIAL_STATE = {\n  correct: '',\n  answers: [],\n  disabledBtn: false,\n  newAnswer: false,\n  answer: false,\n};\n\nconst answer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'ANSWER': {\n    if (state.correct === action.type.correct) {\n      return state;\n    }\n    const magicNumber = 0.5;\n    const answers = action.answers\n      .sort(() => (Math.random() - magicNumber));\n    return { ...state, correct: action.correct, answers };\n    // https://javascript.info/task/shuffle  = MathRandom()\n  }\n  case 'DISABLED_AWNSWERS':\n    return { ...state, disabledBtn: action.value };\n  case 'CLEAR_ANSWER':\n    return { ...state, correct: '', answers: [] };\n  default:\n    return state;\n  }\n};\n\nexport default answer;\n","const INITIAL_STATE = {\n  timerRunning: true,\n  time: 30,\n  timerId: undefined,\n};\n\nconst timer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'TIMER_RUNNING': {\n    if (action.value) {\n      return { ...state, timerRunning: action.value, time: 30 };\n    }\n    return { ...state, timerRunning: action.value };\n  }\n  case 'TIMER':\n    return { ...state, time: state.time - 1 };\n  case 'TIMER_ID':\n    return { ...state, timerId: action.value };\n  default:\n    return state;\n  }\n};\n\nexport default timer;\n","import { combineReducers } from 'redux';\nimport player from './player';\nimport token from './token';\nimport ranking from './ranking';\nimport questions from './questions';\nimport answers from './answers';\nimport timer from './timer';\n\nconst rootReducer = combineReducers({\n  player,\n  token,\n  ranking,\n  questions,\n  answers,\n  timer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducer';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import md5 from 'crypto-js/md5';\nimport store from '../store';\n\nexport const actionPlayer = (value) => ({\n  type: 'USER_REQUEST',\n  value,\n});\n\nexport const actionAddScore = (value) => ({\n  type: 'ADD_SCORE',\n  value,\n});\n\nexport const actionClearScore = () => ({\n  type: 'CLEAR_SCORE',\n});\n\nexport const actionToken = (value) => ({\n  type: 'TOKEN_REQUEST',\n  value,\n});\n\nexport const actionRanking = (value) => ({\n  type: 'RANKING_REQUEST',\n  value,\n});\n\nexport const actionQuestion = (value) => ({\n  type: 'QUESTION_ACTION',\n  value,\n});\n\nexport const actionClearQuestion = () => ({\n  type: 'CLEAR_QUESTION',\n});\n\nexport const actionTimerRuning = (value) => ({\n  type: 'TIMER_RUNNING',\n  value,\n});\n\nexport const actionSetTimerId = (value) => ({\n  type: 'TIMER_ID',\n  value,\n});\n\nexport const actionTimer = () => ({\n  type: 'TIMER',\n});\nexport const actionAnswers = (answers, correct) => ({\n  type: 'ANSWER',\n  answers,\n  correct,\n});\nexport const actionClearAnswers = () => ({\n  type: 'CLEAR_ANSWER',\n});\n\nexport const actionDisabledAnswers = (value) => ({\n  type: 'DISABLED_AWNSWERS',\n  value,\n});\n\nexport const actionGravatarImage = (email) => {\n  const emailHash = md5(email).toString();\n  const image = `https://www.gravatar.com/avatar/${emailHash}`;\n  return { type: 'GRAVATAR_IMAGE', value: image };\n};\n\nexport const getToken = () => async (dispatch) => {\n  const request = await fetch('https://opentdb.com/api_token.php?command=request');\n  const requestJsonToken = await request.json();\n  dispatch(actionToken(requestJsonToken.token));\n};\n\nexport const getQuestion = () => async (dispatch) => {\n  const { token } = store.getState();\n  const request = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n  const requestJsonQuestion = await request.json();\n  dispatch(actionQuestion(requestJsonQuestion));\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { actionGravatarImage, actionPlayer, getToken } from '../Redux/actions';\nimport './Login.css';\n\nexport default function Login(props) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isDisable, setIsDisable] = useState(true);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (name.length > 0 && email.length > 0) {\n      setIsDisable(false);\n    } else {\n      setIsDisable(true);\n    }\n  }, [name, email]);\n  async function handleBtnPlay() {\n    dispatch(getToken());\n    dispatch(actionPlayer({ name, email }));\n    dispatch(actionGravatarImage(email));\n    const { history: { push } } = props;\n    push('/game');\n  }\n\n  function handleBtnSettings() {\n    const { history: { push } } = props;\n    push('/settings');\n  }\n\n  return (\n    <div className=\"login\">\n      <form className=\"form-login\">\n        <label htmlFor=\"login-name\">\n          <input\n            className=\"input-login\"\n            data-testid=\"input-player-name\"\n            id=\"login-name\"\n            name=\"name\"\n            value={ name }\n            onChange={ ({ target }) => { setName(target.value); } }\n            placeholder=\"Name\"\n          />\n        </label>\n\n        <label htmlFor=\"login-email\">\n          <input\n            className=\"input-login\"\n            data-testid=\"input-gravatar-email\"\n            id=\"login-email\"\n            name=\"email\"\n            value={ email }\n            onChange={ ({ target }) => { setEmail(target.value); } }\n            placeholder=\"E-mail\"\n          />\n        </label>\n\n        <button\n          className=\"btn-login\"\n          data-testid=\"btn-play\"\n          disabled={ isDisable }\n          type=\"button\"\n          onClick={ handleBtnPlay }\n        >\n          Play\n        </button>\n\n        <button\n          className=\"btn-settings\"\n          data-testid=\"btn-settings\"\n          type=\"button\"\n          onClick={ handleBtnSettings }\n        >\n          Settings\n        </button>\n      </form>\n    </div>);\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './GameHeader.css';\n\nexport default function GameHeader() {\n  const { name, score, gravatarImage } = useSelector((state) => state.player);\n  return (\n    <div className=\"header-game\">\n      <img\n        className=\"imagem-game\"\n        data-testid=\"header-profile-picture\"\n        src={ gravatarImage }\n        alt=\"user\"\n      />\n\n      <span\n        className=\"span-header\"\n        data-testid=\"header-player-name\"\n      >\n        {'Jogador: '}\n        {name}\n      </span>\n\n      <span>{'Pontos: '}</span>\n\n      <span\n        className=\"span-header\"\n        data-testid=\"header-score\"\n      >\n        {' '}\n        {score}\n      </span>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './ButtonAnswer.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actionAddScore,\n  actionDisabledAnswers, actionTimerRuning } from '../Redux/actions';\n\nexport default function ButtonAnswers(props) {\n  const { answers, correct, disabledBtn } = useSelector((state) => state.answers);\n  const { timerId, time, timerRunning } = useSelector((state) => state.timer);\n  const { setHasClick, difficulty } = props;\n  const correcAnswer = 'correct-answer';\n  const [classArray, setClassArray] = useState(['', '', '', '']);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setClassArray(['', '', '', '']);\n    dispatch(actionDisabledAnswers(false));\n  }, [answers, dispatch]);\n  function createIndex() {\n    const indexArray = [];\n    let counter = 0;\n    answers.forEach((item) => {\n      if (item !== correct) {\n        indexArray.push(`wrong-answer-${counter}`);\n        counter += 1;\n      } else {\n        indexArray.push(correcAnswer);\n      }\n    });\n    return indexArray;\n  }\n\n  const indexArray = createIndex();\n\n  function setScore(answer) {\n    const difficultyValue = { hard: 3, medium: 2, easy: 1 };\n    if (answer === correct) {\n      const magicNumber10 = 10;\n      const score = magicNumber10 + (difficultyValue[difficulty] * time);\n      dispatch(actionAddScore(score));\n    }\n  }\n\n  function setColor(e) {\n    setScore(e.target.id);\n    dispatch(actionTimerRuning(false));\n    const buttonColor = indexArray.map((element) => {\n      if (element === correcAnswer) {\n        return 'green';\n      }\n      return 'red';\n    });\n    setClassArray(buttonColor);\n    setHasClick(true);\n    clearInterval(timerId);\n    dispatch(actionDisabledAnswers(true));\n  }\n\n  useEffect(() => {\n    if (time < 1 && timerRunning === true) {\n      dispatch(actionTimerRuning(false));\n      const buttonColor = indexArray.map((element) => {\n        if (element !== correcAnswer) {\n          return 'red';\n        }\n        return 'green';\n      });\n      setClassArray(buttonColor);\n      setHasClick(true);\n      clearInterval(timerId);\n    }\n  }, [time, timerRunning, dispatch, indexArray, setHasClick, timerId]);\n\n  return (\n    <div data-testid=\"answer-options\" className=\"answers\">\n      {\n        answers.map((element, ind) => (\n          <button\n            key={ ind }\n            type=\"button\"\n            data-testid={ indexArray[ind] }\n            onClick={ (e) => setColor(e) }\n            className={ classArray[ind] }\n            disabled={ disabledBtn }\n            id={ element }\n          >\n            { element }\n          </button>\n        ))\n      }\n    </div>\n  );\n}\n\nButtonAnswers.propTypes = {\n  setHasClick: PropTypes.func,\n}.isRequired;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actionDisabledAnswers, actionSetTimerId, actionTimer } from '../Redux/actions';\nimport './Timer.css';\n\nexport default function Timer() {\n  const { time, timerId } = useSelector((state) => state.timer); // userSelector puxa a informação do estado global\n  const [className, setClassName] = useState('timer');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (timerId === undefined) { // evita multiplos setInterval\n      const second = 1000;\n      const interval = setInterval(() => {\n        dispatch(actionTimer());\n      }, second);\n      dispatch(actionSetTimerId(interval));\n    }\n  }, [timerId, dispatch]);\n\n  useEffect(() => {\n    if (time < 1) {\n      clearInterval(timerId);\n    }\n  }, [time, timerId]);\n\n  useEffect(() => {\n    const magicNumber5 = 5;\n    if (time === 0) {\n      dispatch(actionDisabledAnswers(true));\n    }\n    if (time === magicNumber5 && !/pulse/.test(className)) {\n      setClassName(`${className} pulse`);\n    }\n  }, [time, dispatch, setClassName, className]);\n  return (\n    <span className={ className }>\n      {time}\n    </span>);\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport {\n  actionAnswers,\n  actionClearAnswers,\n  actionClearQuestion,\n  actionClearScore,\n  actionSetTimerId,\n  actionTimerRuning,\n  getQuestion,\n  getToken,\n} from '../Redux/actions';\nimport ButtonAnswers from './ButtonAnswers';\nimport './Questions.css';\nimport Timer from './Timer';\n\nexport default function Questions() {\n  const dispatch = useDispatch();\n  const questionsReducer = useSelector((state) => state.questions.questions);\n  const { score, name, gravatarImage } = useSelector((state) => state.player);\n\n  const [questionsClassName, setQuestionsClassName] = useState(null);\n  const { token } = useSelector((state) => state);\n  const [questions, setQuestions] = useState([]);\n  const [question, setQuestion] = useState({});\n  const [position, setPosition] = useState(0);\n  const [hasClick, setHasClick] = useState(false);\n\n  useEffect(() => { // Efeito similar ao ComponentDidMount\n    dispatch(actionClearScore());\n    dispatch(getQuestion());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const magicNumber = 3; // verifica se o token está valido\n    if (questionsReducer.response_code === magicNumber) {\n      dispatch(getToken());\n    } else {\n      setQuestions(questionsReducer.results);\n    }\n  }, [questionsReducer, dispatch, token]);\n\n  useEffect(() => {\n    if (questions) {\n      setPosition(1);\n      setQuestion(questions[0]);\n    }\n  }, [questions]);\n\n  const magicNumber5 = 5;\n  function saveLocalStorage() {\n    if (localStorage.ranking) {\n      const aux = JSON.parse(localStorage.ranking);\n      aux.push({ name, score, picture: gravatarImage });\n      localStorage.ranking = JSON.stringify(aux);\n    } else {\n      localStorage.ranking = JSON.stringify([{ name, score, picture: gravatarImage }]);\n    }\n  }\n  function nextQuestion() {\n    setQuestion(questions[position]);\n    setPosition(position + 1);\n    setHasClick(false);\n    dispatch(actionTimerRuning(true));\n    dispatch(actionSetTimerId(undefined));\n    if (hasClick && position === magicNumber5) {\n      saveLocalStorage();\n      dispatch(actionClearAnswers());\n      dispatch(actionClearQuestion());\n    }\n  }\n\n  useEffect(() => {\n    if (question && question.category) {\n      dispatch(actionAnswers([...question.incorrect_answers,\n        question.correct_answer], question.correct_answer));\n      setQuestionsClassName('questions');\n    }\n  }, [question, dispatch]);\n\n  return (\n    <div className={ questionsClassName }>\n      {question && question.category && (\n        <>\n          <h4\n            data-testid=\"question-category\"\n            className=\"questions__category\"\n          >\n            {question.category}\n          </h4>\n          <p\n            data-testid=\"question-text\"\n            className=\"questions__question\"\n          >\n            {question.question}\n          </p>\n          <Timer />\n          <ButtonAnswers difficulty={ question.difficulty } setHasClick={ setHasClick } />\n        </>\n      )}\n\n      {\n        (hasClick && position < magicNumber5) && (\n          <button\n            type=\"button\"\n            data-testid=\"btn-next\"\n            onClick={ nextQuestion }\n            className=\"questions__next-question\"\n          >\n            Next Question\n          </button>\n        )\n      }\n      {\n        (hasClick && position === magicNumber5) && (\n          <Link\n            to=\"/feedback\"\n            onClick={ nextQuestion }\n          >\n            <button\n              type=\"button\"\n              data-testid=\"btn-next\"\n              className=\"questions__next-question\"\n            >\n              Next Question\n            </button>\n          </Link>\n        )\n      }\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport GameHeader from '../components/GameHeader';\nimport Questions from '../components/Questions';\nimport './Game.css';\n\nexport default function Game() {\n  return (\n    <div className=\"game\">\n      <GameHeader />\n      <Questions />\n    </div>);\n}\n\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n","import React from 'react';\n\nexport default function Settings() {\n  return (\n    <div>\n      <h1 data-testid=\"settings-title\">\n        Settings\n      </h1>\n    </div>);\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Ranking.css';\n\nexport default function Ranking() {\n  const ranking = JSON.parse(localStorage.ranking);\n  return (\n    <div className=\"ranking\">\n      <div className=\"container-ranking\">\n        <h1 data-testid=\"ranking-title\">Ranking</h1>\n        {\n          ranking.sort((a, b) => b.score - a.score)\n            .map((item, index) => (\n              <div key={ index } className=\"ranking-jogador\">\n                <img src={ item.picture } alt=\"player\" className=\"img-ranking\" />\n                <span data-testid={ `player-name-${index}` }>\n                  {item.name}\n                </span>\n                <span>- Pontos:</span>\n                <span data-testid={ `player-score-${index}` }>\n                  {item.score}\n                </span>\n              </div>\n            ))\n        }\n        <Link to=\"/\">\n          <button\n            className=\"button-ranking\"\n            type=\"button\"\n            data-testid=\"btn-go-home\"\n          >\n            Jogar novamente\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport GameHeader from '../components/GameHeader';\nimport './FeedBack.css';\n\nexport default function Feedback() {\n  const { assertions, score } = useSelector((state) => state.player);\n\n  const magicNumber3 = 3;\n  return (\n    <div className=\"feedback\">\n      <GameHeader />\n      <h2 data-testid=\"feedback-text\">\n        {assertions >= magicNumber3\n          ? 'Well Done!' : 'Could be better...'}\n      </h2>\n      <section>\n        <h3>\n          Placar final:\n          {' '}\n          <span data-testid=\"feedback-total-score\">{Number(score)}</span>\n          {' '}\n          pontos\n        </h3>\n        <h3>\n          Total de perguntas corretas:\n          {' '}\n          <span data-testid=\"feedback-total-question\">{assertions}</span>\n          {' '}\n        </h3>\n      </section>\n      <section />\n\n      <Link\n        to=\"/ranking\"\n      >\n        <button\n          className=\"button-feedback\"\n          type=\"button\"\n          data-testid=\"btn-ranking\"\n        >\n          Ranking\n        </button>\n      </Link>\n\n      <Link\n        to=\"/\"\n      >\n        <button\n          className=\"button-feedback\"\n          type=\"button\"\n          id=\"button-play-again\"\n          data-testid=\"btn-play-again\"\n        >\n          Play Again\n        </button>\n      </Link>\n\n    </div>\n  );\n}\n","import { Switch, Route } from 'react-router-dom';\nimport React from 'react';\nimport './App.css';\nimport Login from './pages/Login';\nimport Game from './pages/Game';\nimport Settings from './pages/Settings';\nimport Ranking from './pages/Ranking';\nimport Feedback from './pages/Feedback';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Switch>\n          <Route exact path=\"/\" component={ Login } />\n          <Route exact path=\"/game\" component={ Game } />\n          <Route path=\"/settings\" component={ Settings } />\n          <Route path=\"/ranking\" component={ Ranking } />\n          <Route path=\"/feedback\" component={ Feedback } />\n        </Switch>\n      </header>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport store from './Redux/store';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}